<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Ssl | Blog do ManuWell]]></title>
  <link href="http://wjsantos.github.io/blog/categories/ssl/atom.xml" rel="self"/>
  <link href="http://wjsantos.github.io/"/>
  <updated>2015-03-07T19:23:08-03:00</updated>
  <id>http://wjsantos.github.io/</id>
  <author>
    <name><![CDATA[Wellington Santos]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Importando Certificado SSL No Ubuntu]]></title>
    <link href="http://wjsantos.github.io/blog/2015/03/07/importando-certificado-ssl-no-ubuntu/"/>
    <updated>2015-03-07T18:37:29-03:00</updated>
    <id>http://wjsantos.github.io/blog/2015/03/07/importando-certificado-ssl-no-ubuntu</id>
    <content type="html"><![CDATA[<p>Fala galera, blza?! Hoje vou compartilhar com vocês um problema
que passamos com certificados SSL em nosso ambiente de QA.</p>

<h2>Cenário</h2>

<p>Conversa entre duas aplicações server-side com certificado SSL gerado via comando
openssl, que chamarei neste post de certificado auto-gerado.</p>

<!-- more -->


<h2>O problema</h2>

<p>Quando a aplicação tentava conversar com nossa aplicação interna de OAuth via HTTPS,
com um certificado auto-gerado ela crashava.</p>

<p>Analisando os logs da aplicação que fazia o request, vímos uma mensagem de erro
de certificado SSL inválido.</p>

<p>Lógico que o certificado SSL era inválido, pois estávamos usando um que havíamos
gerado para nosso provedor de oauth, <code>oauth.provider.com</code>. Não eramos uma <code>CA</code> válida.
Então, como resolver esse problema?</p>

<h2>Solução</h2>

<p>Pegamos o certificado gerado pelo comando:</p>

<pre><code class="bash">
sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout oauth.provider.com.key
-out oauth.provider.com.crt
</code></pre>

<p>e, na máquina da aplicação que fazia o request <code>HTTPS</code> para o servidor de OAuth, importamos
o <code>.crt</code> dentro do <code>Sistema Operacional</code>.</p>

<p>Os certificados que o <code>SO</code> acredita serem válidos e de entidades certificadoras, as <code>CA</code>s,
ficam no diretório <code>/usr/share/ca-certificates</code>.</p>

<p>Todo request <code>HTTPS</code> no processo de validação de certificado olha para esse diretório.
Se o nosso certificado estivesse ali; batata! resolvido o problema.</p>

<p>Jogamos nosso certificado dentro desse diretório e avisamos o <code>SO</code> para recarregar
os certificados:</p>

<pre><code class="bash">
# jogando o certificado do provedor de autenticação no dir de certificados
sudo cp oauth.provider.com.crt /usr/share/ca-certificates/

# adicionando novo certificado na listagem
sudo echo oauth.provider.com &gt;&gt; /etc/ca-certificates.conf

# atualizando a lista de certificados existentes
sudo update-ca-certificates -f
</code></pre>

<p>Quando a aplicação realizou o request HTTPS ao nosso OAuth provider com o certificado importado.
Tudo fluiu perfeitamente bem.</p>

<p>Resolvemos um problema de comunicação no nível do <code>SO</code>. Sem precisar alterar uma linha de código da aplicação.</p>

<p>Sugestões como alterar o código para ignorar o certificado foram levantadas mas que bom,
que essa resolveu. Afinal, esse era um problema de ambiente e não queríamos comprar um certificado SSL
somente para o ambiente de <code>QA</code>.</p>

<p>É isso! E simbora!</p>
]]></content>
  </entry>
  
</feed>
